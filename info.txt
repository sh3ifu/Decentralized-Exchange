secret fraze: alone humor economy wall intact okay soon palace borrow degree army toy



  async function getTokenAmount() {
    const contract = checkMetamask(
      Exchange,
      "0x3545C95Cc60AC0AAAaEeA4b1FA9dB4720942529a"
    );

    try {
      const tokenValue = ethers.utils.parseEther("3");
      const tokenAmount = await contract.getTokenAmount(tokenValue);
      let hexValue = tokenAmount._hex;
      hexValue = hexValue.replace("0x", ""); // Удаляем префикс "0x"
      var decimalValue = parseInt(hexValue, 16);

      console.log("Token Amount: ", decimalValue);
    } catch (error) {
      console.log("Error: ", error);
    }
  }

  async function getEthAmount() {
    const contract = checkMetamask(
      Exchange,
      "0x3545C95Cc60AC0AAAaEeA4b1FA9dB4720942529a"
    );

    try {
      const ethAmount = await contract.getEthAmount("90");
      let hexValue = ethAmount._hex;
      hexValue = hexValue.replace("0x", ""); // Удаляем префикс "0x"
      var decimalValue = parseInt(hexValue, 16);

      console.log("Eth Amount: ", decimalValue);
    } catch (error) {
      console.log("Error: ", error);
    }
  }

  async function addLiquidity() {
    if (typeof window.ethereum !== "undefined") {
      await requestAccount();

      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();

      const contractExchange = new ethers.Contract(
        "0x3545C95Cc60AC0AAAaEeA4b1FA9dB4720942529a",
        Exchange.abi,
        signer
      );
      const contractToken = new ethers.Contract(
        "0x7078E0a8c876d4a1967B7634c9E4B82Bb9a53A19",
        Token.abi,
        signer
      );

      const ethValue = ethers.utils.parseEther(f_deposit);
      const tokenValue = ethers.utils.parseEther(s_deposit);

      await contractToken.approve(contractExchange.address, tokenValue);

      try {
        const transaction = await contractExchange.addLiquidity(tokenValue, {
          value: ethValue,
        });
        await transaction.wait();
      } catch (error) {
        console.log("Error: ", error);
      }
    }
  }

  async function getReserve() {
    const contract = checkMetamask(
      Exchange,
      "0x3545C95Cc60AC0AAAaEeA4b1FA9dB4720942529a"
    );

    try {
      const reserve = await contract.getReserve();
      let hexValue = reserve._hex;
      hexValue = hexValue.replace("0x", ""); // Удаляем префикс "0x"
      var decimalValue = parseInt(hexValue, 16);

      console.log("Reserve: ", decimalValue);
    } catch (error) {
      console.log("Error: ", error);
    }
  }